{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/classes/sar.ts","./src/app/classes/state.ts","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/interfaces/player.ts","./src/app/services/card.service.ts","./src/app/services/dealer.service.ts","./src/app/services/dealer.ts","./src/app/services/first-visit-mcprediction.service.ts","./src/app/services/game-player-factory.service.ts","./src/app/services/gameplayer.ts","./src/app/services/mcplayer.service.ts","./src/app/services/print-brain.service.ts","./src/app/services/random-generator.service.ts","./src/app/show-strategy/show-strategy.component.ts","./src/app/show-strategy/show-strategy.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rl-blackjack01-ui';\n}\n","<game></game>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport { ChartComponent } from './chart/chart.component';\nimport { ShowStrategyComponent } from './show-strategy/show-strategy.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\nimport {MatDividerModule} from '@angular/material/divider';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    ChartComponent,\n    ShowStrategyComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatDividerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ElementRef, AfterViewInit, Input } from '@angular/core';\nimport * as d3 from 'd3';\nimport { _3d } from 'd3-3d';\nimport { State } from '../classes/state';\n\n/**\n * The code is from here:\n * https://gist.github.com/Niekes/e920c03edd7950578b8a6cded8b5a1a5\n * \n * Thank you, Stefan Nieke\n */\n\n@Component({\n  selector: 'chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements AfterViewInit {\n  private svg;\n  private hostElement;\n  private mx;\n  private my;\n  private mouseX;\n  private mouseY;\n  private surface;\n  private color;\n  j = 16;\n  alpha = 0; beta = 0; startAngle = Math.PI/4;\n  private d3Data = [];\n  private state = new State();\n\n  @Input()\n  set graphData(data: {[key: string]: number}) {\n    if (!data || Object.keys(data).length === 0) {\n        return;\n    }\n    console.log(\"data:\", data);\n    this.d3Data.length = 0;\n\n    /*\n\n    const rn1 = Math.floor(d3.randomUniform(1, 12)());\n    const j = 16;\n    for(let z = -j; z < j; z++){\n        for(let x = -j; x < j; x++){\n            this.d3Data.push({x: x, y: Math.cos(Math.sqrt(x*x+z*z)/5*Math.PI)*rn1, z: z});\n        }\n    }\n\n    */\n\n    const keys = Object.keys(data);\n\n    keys.forEach(key => {\n        const parts = this.state.splitKey(key);\n        this.d3Data.push([parts.sum, data[key], parts.dealerCard]);\n    })\n\n    //this.d3Data = [[[0,-1,0],[-1,1,0],[1,1,0]]];\n\n    this.init();\n  }\n\n  constructor(private elRef: ElementRef) {\n    this.hostElement = this.elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.svg    = d3.select(this.hostElement.querySelector('svg'))\n        .call(d3.drag().on('drag', this.dragged.bind(this))\n        .on('start', this.dragStart.bind(this))\n        .on('end', this.dragEnd.bind(this))).append('g');\n    \n    this.surface = _3d()\n    .scale(100)\n    .origin([480, 250])\n    .shape('TRIANGLE');\n\n    /*\n    this.surface = _3d()\n      .scale(10)\n      .x(function(d){ return d.x; })\n      .y(function(d){ return d.y; })\n      .z(function(d){ return d.z; })\n      .origin([480, 250])\n      .rotateY(this.startAngle)\n      .rotateX(-this.startAngle)\n      .shape('SURFACE', this.j*2);\n    */\n    this.color = d3.scaleLinear();\n\n    d3.selectAll('button').on('click', this.init.bind(this));\n\n    //this.change();\n  }\n\n  processData(data, tt){\n\n      const planes = this.svg.selectAll('path').data(data, function(d){ return d.plane; });\n\n      planes\n          .enter()\n          .append('path')\n          .attr('class', '_3d')\n          .attr('fill', this.colorize.bind(this))\n          .attr('opacity', 0)\n          .attr('stroke-opacity', 0.1)\n          .merge(planes)\n          .attr('stroke', 'black')\n          .transition().duration(tt)\n          .attr('opacity', 1)\n          .attr('fill', this.colorize.bind(this))\n          .attr('d', this.surface.draw);\n\n      planes.exit().remove();\n\n      d3.selectAll('._3d').sort(this.surface.sort);\n  }\n\n  colorize(d){\n      //const _y = (d[0][1] + d[1][1] + d[2][1] + d[3][1])/4;\n      const _y = (d[0][1] + d[1][1] + d[2][1])/3;\n      return d.ccw ? d3.interpolateSpectral(this.color(_y)) : d3.color(d3.interpolateSpectral(this.color(_y))).darker(2.5);\n  }\n\n  dragStart(){\n      this.mx = d3.event.x;\n      this.my = d3.event.y;\n  }\n\n  dragged(){\n      this.mouseX = this.mouseX || 0;\n      this.mouseY = this.mouseY || 0;\n      this.beta   = (d3.event.x - this.mx + this.mouseX) * Math.PI / 230 ;\n      this.alpha  = (d3.event.y - this.my + this.mouseY) * Math.PI / 230  * (-1);\n      this.processData(\n          this.surface\n            .rotateY(this.beta + this.startAngle)\n            .rotateX(this.alpha - this.startAngle)(this.d3Data),\n        0);\n  }\n\n  dragEnd(){\n      this.mouseX = d3.event.x - this.mx + this.mouseX;\n      this.mouseY = d3.event.y - this.my + this.mouseY;\n  }\n\n  init(){\n      if (!this.d3Data || this.d3Data.length === 0) {\n          return;\n      }\n\n      const yMin = d3.min(this.d3Data, function(d){ return d[1]; });\n      const yMax = d3.max(this.d3Data, function(d){ return d[1]; });\n\n      this.color.domain([yMin, yMax]);\n      this.processData(this.surface(this.d3Data), 1000);\n  }\n\n\n}\n","<svg width=\"960\" height=\"500\"></svg>","import { State } from './state';\nimport { Action } from '../enums/action.enum';\n\nexport class SAR {\n    constructor(private state: State, private action: Action, private reward = 0) {}\n\n    getState(): State {\n        return this.state;\n    }\n\n    getAction(): Action {\n        return this.action;\n    }\n\n    getReward() : number {\n        return this.reward;\n    }\n}\n","import { Action } from '../enums/action.enum';\nimport { applySourceSpanToExpressionIfNeeded } from '@angular/compiler/src/output/output_ast';\n\nexport class State {\n    public readonly SEPARATOR = '-';\n    sum = 0;\n    usableAce = false;\n    dealerCard = 0;\n\n    constructor(sum: number = 0, usabelAce: boolean = false, dealerCard: number = 0) {\n        this.sum = sum;\n        this.usableAce = usabelAce;\n        this.dealerCard = dealerCard;\n    }\n\n    getKey(action?: Action): string {\n        let actionStr = '';\n        if (action !== undefined) {\n            actionStr = this.SEPARATOR + ((action === Action.HIT) ? 'HIT':'STICK');\n        }\n\n        return this.sum + this.SEPARATOR + this.usableAce + this.SEPARATOR + this.dealerCard + actionStr;\n    }\n\n    splitKey(key: string): {sum: number, usableAce: boolean, dealerCard: number, action: Action} {\n        const splitedKey = {sum: 0, usableAce: false, dealerCard: 0, action: Action.STICK};\n        const parts = key.split(this.SEPARATOR);\n        splitedKey.sum = +parts[0];\n        splitedKey.usableAce = (parts[1] === 'true');\n        splitedKey.dealerCard = +parts[2];\n        splitedKey.action = (parts[3] === 'HIT') ? Action.HIT : Action.STICK;\n\n        return splitedKey;\n    }\n}\n","import { Component, OnInit} from '@angular/core';\nimport { DealerService, Score } from '../services/dealer.service';\nimport { MCPlayerService } from '../services/mcplayer.service';\nimport { PrintBrainService } from '../services/print-brain.service';\n\n@Component({\n  selector: 'game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  public numOfLearningGames = 0;\n  public numOfPlayedGames = 0;\n  public dealersWin = 0;\n  public playersWin = [];\n  public playersName = [];\n  public playersStrategy = {};\n  public scores0 : Score = <Score>{};\n\n  data = {};\n\n  constructor(\n    private dealerService: DealerService,\n    private mcPlayer: MCPlayerService,\n    private printBrain: PrintBrainService) { }\n\n  ngOnInit(): void {\n    this.dealerService.addPlayer(this.mcPlayer);\n\n    this.playersName = ['Monte Carlo'];\n  }\n\n  learn() {\n    this.numOfPlayedGames = 0;\n    this.dealersWin = 0;\n    this.playersWin = Array(this.playersName.length).fill(0);\n\n    for (let i = 0; i < 10000; i++) {\n      setTimeout(() => {\n        this.dealerService.playWithAllPlayers(true)\n        this.numOfLearningGames++;\n        if (i % 100 == 0) this.playersStrategy = this.mcPlayer.getV();\n      }, 0);\n    }\n\n    setTimeout(() => {\n      this.data = this.mcPlayer.getV();\n      this.printBrain.printV(this.data);\n      this.scores0 = this.dealerService.getScores();\n    }, 0);\n\n     \n  }\n\n  play100Games(): void {\n    for (let i = 0; i < 100; i++) {\n      setTimeout(() => this.dealerService.playWithAllPlayers(false), 0);\n    }\n\n    setTimeout(() => {\n      const scores1 = this.dealerService.getScores();\n\n      this.numOfPlayedGames += 100;\n      this.dealersWin = scores1.dealerReward - this.scores0.dealerReward;\n      this.playersWin = scores1.rewards.map((v,i) => v-this.scores0.rewards[i]);\n    }, 0);\n\n  }\n\n}\n","\n<mat-toolbar>\n<button mat-raised-button (click)=\"learn()\">Learn from 10000 games</button>\n<span class=\"spacer\"></span>\n<button mat-raised-button (click)=\"play100Games()\">Play 100 games</button>\n</mat-toolbar>\n\n<p>Number of learning games: {{numOfLearningGames}}</p>\n<p>Number of played games: {{numOfPlayedGames}}</p>\n\n  <ul>\n    <li>Dealer's score:{{dealersWin}}</li>\n    <li *ngFor=\"let p of playersWin;let i = index\">\n      <b>{{playersName[i]}}'s score:</b>{{ p }}\n    </li>\n  </ul>\n\n  <show-strategy [V]=\"playersStrategy\"></show-strategy>\n\n","import { Action } from '../enums/action.enum';\nimport { State } from '../classes/state';\n\nexport abstract class Player {\n    getName(): string { return 'Abstract player'};\n    prepareForANewGame(): void {};\n    abstract play(state: State, learningGame?: boolean): Action;\n    episodeDone(state: State, reward: number): void {};\n}\n","import { Injectable } from '@angular/core';\nimport { RandomGeneratorService } from './random-generator.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n\n  constructor(private randomGenerator: RandomGeneratorService) {}\n\n  public getCard(): number {\n    return this.randomGenerator.getRandom(2,12);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../enums/action.enum';\nimport { Player } from '../interfaces/player';\nimport { CardService } from './card.service';\nimport { GamePlayer } from './gameplayer';\nimport { Dealer } from './dealer';\nimport { GamePlayerFactoryService } from './game-player-factory.service';\n\nexport class Score {\n  rewards: number[]; numOfGames: number; dealerReward: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealerService {\n  private players: GamePlayer[];\n  private rawPlayers: Player[];\n  private rawPlayersRewards: number[];\n  private numOfGames = 0;\n  private dealerReward = 0;\n\n  constructor(private cardService: CardService, private gamePlayerFactory: GamePlayerFactoryService) {\n    this.clearPlayers();\n  }\n\n  clearPlayers() {\n    this.rawPlayers = [];\n    this.rawPlayersRewards = [];\n    this.numOfGames = 0;\n    this.dealerReward = 0;\n  }\n\n  getScores(): Score {\n    return {rewards: this.rawPlayersRewards.map(r => r), numOfGames: this.numOfGames, dealerReward: this.dealerReward};\n  }\n\n  playWithAllPlayers(learningGame: boolean) {\n    const dealer = this.initNewGame();\n\n    if (this.players.length == 0) {\n      return;\n    }\n\n    this.giveTwoCardToEveryPlayer();\n\n    dealer.addCard(this.cardService.getCard());\n    const dealerSecondCard = this.cardService.getCard();\n    dealer.addCard(dealerSecondCard);\n\n    this.players.forEach((player) => {\n      this.playWithOnePlayer(player, dealerSecondCard, learningGame);\n    })\n\n    this.playWithOnePlayer(dealer, dealerSecondCard, learningGame);\n\n    this.rewardPlayers(dealer.getState().sum);\n  }\n\n  initNewGame(): GamePlayer {\n    this.players = this.rawPlayers.map(player => this.gamePlayerFactory.createGamePlayer(player));\n    this.numOfGames++;\n\n    return this.gamePlayerFactory.createGamePlayer(new Dealer());\n  }\n\n  rewardPlayers(dealerSum: number) {\n    this.players.forEach((player,index) => {\n      const reward = player.getReward(dealerSum);\n      player.learn(reward);\n      this.rawPlayersRewards[index]+=reward;\n      this.dealerReward += -reward;\n    })\n  }\n\n  giveTwoCardToEveryPlayer() {\n    this.players.forEach(player => {\n      player.addCard(this.cardService.getCard());\n      player.addCard(this.cardService.getCard());\n    });\n  }\n\n  playWithOnePlayer(player: GamePlayer, dealerOpenCard: number, learningGame = true) {\n    let action = Action.HIT;\n\n    while(action === Action.HIT && player.getState().sum <= 21) {\n      action = player.play(dealerOpenCard, learningGame);\n      if (action === Action.HIT) {\n        player.addCard(this.cardService.getCard());\n      }\n    }\n  }\n\n  addPlayer(player: Player) {\n    this.rawPlayers.push(player);\n    this.rawPlayersRewards.push(0);\n  }\n}\n","import { Player } from '../interfaces/player';\nimport { Action } from '../enums/action.enum';\nimport { State } from '../classes/state';\n\nexport class Dealer extends Player {\n    play(state: State): Action {\n        return (state.sum >= 17) ? Action.STICK : Action.HIT; \n    }\n}","import { Injectable } from '@angular/core';\nimport { State } from '../classes/state';\nimport { Action } from '../enums/action.enum';\nimport { SAR } from '../classes/sar';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirstVisitMCPredictionService {\n  private V: {[key: string]: number} = {};\n  private Returns: {[key: string]: number[]}= {};\n  private episode: SAR[] = [];\n  private firstStates: {[key: string]: number} = {};\n\n  constructor() { }\n\n  startEpisode() {\n    this.episode = [];\n    this.firstStates = {};\n  }\n\n  getEpisode(): SAR[] {\n    return this.episode.map(sar => new SAR(sar.getState(), sar.getAction(), sar.getReward()));\n  }\n\n  addStep(state: State, action: Action, reward: number = 0) {\n    const _state = new State(state.sum, state.usableAce, state.dealerCard);\n    const key = state.getKey(action);\n    if (!this.firstStates[key]) {\n      this.firstStates[key] = this.episode.length;\n    }\n    this.episode.push(new SAR(_state, action, reward));\n  }\n\n  getAction(state: State, epsilon: number = 0): Action {\n    const keyHit = state.getKey(Action.HIT);\n    const keyStick = state.getKey(Action.STICK);\n    const hitVal = this.V[keyHit];\n    const stickVal = this.V[keyStick];\n\n    let action = Action.HIT;\n\n    // both actions have been tried, epsilon-greedy action\n    if (hitVal !== undefined && stickVal !== undefined) {\n      action =  (hitVal > stickVal) ? Action.HIT : Action.STICK;\n      if (Math.random() < epsilon) {\n        action = (action === Action.HIT) ? Action.STICK : Action.HIT;\n      }\n    }\n    else {  // only one of the actions was tried, exploration \n      action = (hitVal === undefined) ? Action.HIT : Action.STICK;\n    }\n\n    return action;\n  }\n\n  learnFromEpisode(reward: number): void {\n    const T = this.episode.length - 1;\n    const lastSAR = this.episode[T];\n    this.episode[T] = new SAR(lastSAR.getState(), lastSAR.getAction(), reward);\n\n    let G = 0;\n    for (let t = T; t >= 0; t--) {\n      G += this.episode[t].getReward();\n\n      const state = this.episode[t].getState();\n      const action = this.episode[t].getAction();\n      const key = state.getKey(action);\n\n      if (this.firstVisit(key, t)) {\n        if (!this.Returns[key]) {\n          this.Returns[key]=[G];\n        }\n        else {\n          this.Returns[key].push(G);\n        }\n        this.V[key] = this.Returns[key].reduce((total, actual)=> total+=actual, 0)/this.Returns[key].length;\n      }\n    }\n  }\n\n  getV(): {[key: string]: number} {\n    return Object.assign({}, this.V);\n  }\n\n  firstVisit(key: string, t: number): boolean {\n    const keyIndex = this.firstStates[key];\n    return (keyIndex !== undefined && keyIndex === t);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from '../interfaces/player';\nimport { GamePlayer } from './gameplayer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamePlayerFactoryService {\n\n  constructor() { }\n\n  createGamePlayer(player: Player): GamePlayer {\n    return new GamePlayer(player);\n  }\n}\n","import { Player } from '../interfaces/player';\nimport { Action } from '../enums/action.enum';\nimport { State } from '../classes/state';\n\n/**\n * An Ace in hand can be counted as 1 or 11\n * whichever is better\n * There would be many aces in hand, but only the last one\n * can be decidable as 1 or 11, because the previous aces\n * should be counted as 1 to not bust\n * (11 + 11 = 22, so the previous ace must be 1)\n */\nexport class GamePlayer {\n    private state = new State(0, false, 0);\n    private player:  Player;\n\n    constructor(player?: Player) {\n      if (player !== undefined) {\n        this.player = player;\n        this.player.prepareForANewGame();\n      }\n    }\n\n    setPlayer(player: Player) {\n      this.player = player;\n      this.player.prepareForANewGame();\n    }\n\n    setDealeCard(dealerOpenCard: number) {\n      this.state.dealerCard = dealerOpenCard;\n    }\n\n    getState(): State {\n        return this.state;\n    }\n\n    addCard(card: number) {\n        let summa = this.state.sum + card;\n\n        // maybe a previous card was ace\n        summa = this.checkBustWithAceInHand(summa);\n\n        if (card == 11) {\n            this.state.usableAce = true;\n            summa = this.checkBustWithAceInHand(summa);\n        }\n\n        this.state.sum = summa;\n    }\n\n    play(dealerCard: number, learningGame: boolean = true): Action {\n        this.state.dealerCard = dealerCard;\n        return this.player.play(this.state, learningGame);\n    }\n\n    private checkBustWithAceInHand(summa): number {\n        if (summa > 21 && this.state.usableAce) {\n            summa -= 10;\n            this.state.usableAce = false;\n        }\n\n        return summa;\n    }\n\n    learn(reward: number) {\n        this.player.episodeDone(\n            this.state, reward);\n    }\n\n    getReward(dealerSum): number {\n        if (this.state.sum > 21) {\n          return -1;\n        }\n    \n        if (dealerSum > 21) {\n          return 1;\n        }\n    \n        const diffPlayer = 21 - this.state.sum;\n        const diffDealer = 21 - dealerSum;\n    \n        if (diffDealer == diffPlayer) {\n          return 0;\n        }\n    \n        if (diffPlayer < diffDealer) {\n          return 1;\n        }\n    \n        return -1;\n      }\n\n}","import { Injectable } from '@angular/core';\nimport { Player } from '../interfaces/player';\nimport { State } from '../classes/state';\nimport { Action } from '../enums/action.enum';\nimport { FirstVisitMCPredictionService } from './first-visit-mcprediction.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MCPlayerService extends Player {\n  private V = {};\n\n  constructor(\n    private learnModule: FirstVisitMCPredictionService\n    ) {\n      super();\n    }\n    \n  getName() {\n    return 'MCPlayer';\n  }\n  prepareForANewGame(): void {\n    this.learnModule.startEpisode();\n  }\n  play(state: State, learningGame: boolean): Action {\n    const action = this.learnModule.getAction(state, learningGame ? 0.3 : 0);\n    this.learnModule.addStep(state, action);\n\n    return action;\n  }\n\n  episodeDone(state: State, reward: number): void {\n    this.learnModule.learnFromEpisode(reward);\n  }\n\n  getV() {\n    return this.learnModule.getV();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State } from '../classes/state';\nimport { Action } from '../enums/action.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintBrainService {\n\n  constructor() { }\n\n  public printV(V:  {[key: string]: number}): void {\n    this.printAceInHand(V, false);\n    this.printAceInHand(V, true);\n  }\n\n  printAceInHand(V:  {[key: string]: number}, usableAce: boolean) {\n    console.log(\"Usable ace: \" + usableAce);\n    console.log(\"   23456789TA\");\n    for (let hand=2; hand < 22; hand++) {\n      let line = (' ' + hand + \"|\").substr(-3);;\n      for (let dealerCard=2; dealerCard <12; dealerCard++) {\n        const s = new State(hand, usableAce, dealerCard);\n        const pHIT = V[s.getKey(Action.HIT)];\n        const pSTICK = V[s.getKey(Action.STICK)];\n        let choose = '?';\n        if (pHIT !== undefined && pSTICK !== undefined) {\n          choose = (pHIT > pSTICK) ? 'H' : 'S';\n        }\n        line += choose;\n      }\n      console.log(line);\n    }\n    console.log(\"\");\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomGeneratorService {\n\n   /**\n   * getRandom(max) - random number between 0 and max\n   * getRandom() - random number between 0 and 1\n   * getRandom(min, max) - random number between min and max\n   * @param limits\n   */\n\n  public getRandom(...limits: number[]): number {\n    if (!limits || limits.length === 0) {\n      return Math.random();\n    }\n\n    if (limits.length === 1) {\n      return Math.floor(Math.random() * limits[0]);\n    }\n\n    return Math.floor(Math.random() * (limits[1] - limits[0]) + limits[0]);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { State } from '../classes/state';\nimport { Action } from '../enums/action.enum';\n\nclass Cell {\n  content: string;\n  probability: number;\n  header = false;\n  style: string;\n\n  constructor(content: any, header = true, probability = 0) {\n    this.content = '' + content;\n    this.header = header;\n    this.probability = probability;\n    this.style = \"\";\n    if (!header && this.content !== '?') {\n      this.style = this.getStyle(probability);\n    }\n  }\n\n  getStyle(probability: number): string {\n    const colorNum = 255-Math.floor(Math.abs(probability) * 255);\n    const c = ('0' + colorNum.toString(16)).substr(-2);\n\n    let color = '00' + c + '00';\n    if (probability < 0) {\n      color = c + '0000';\n    }\n\n    return \"background-color:#\" + color + ((Math.abs(probability) > 0.25) ? \";color: white\" : \"\");\n  }\n}\n\n@Component({\n  selector: 'show-strategy',\n  templateUrl: './show-strategy.component.html',\n  styleUrls: ['./show-strategy.component.css']\n})\nexport class ShowStrategyComponent implements OnInit {\n  rowsUsableAce: Cell[][] = [[]];\n  rowsNoUsableAce: Cell[][] = [[]];\n\n  @Input()\n  set V(v: {}) {\n    this.rowsNoUsableAce = this.getRowsAceInHand(v, false);\n    this.rowsUsableAce = this.getRowsAceInHand(v, true);\n  }\n\n  constructor() { }\n\n  getRowsAceInHand(V:  {[key: string]: number}, usableAce: boolean): Cell[][] {\n    let rows = [\" 23456789TA\".split('').map(c => new Cell(c))];\n\n    for (let hand=2; hand < 22; hand++) {\n      let row = [new Cell(hand)];\n      for (let dealerCard=2; dealerCard <12; dealerCard++) {\n        const s = new State(hand, usableAce, dealerCard);\n        const pHIT = V[s.getKey(Action.HIT)];\n        const pSTICK = V[s.getKey(Action.STICK)];\n        let choose = '?';\n        let probability = 0;\n        if (pHIT !== undefined && pSTICK !== undefined) {\n          choose = (pHIT > pSTICK) ? 'H' : 'S';\n          probability = Math.max(pHIT, pSTICK);\n        }\n        row.push(new Cell(choose, false, probability));\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n","<table>\n    <tr>\n        <td><h2>Usable Ace In Hand</h2></td><td style=\"width:5em\"></td><td><h2>No Usable Ace In Hand</h2></td>\n    </tr>\n\n    <tr>\n        <td>\n            <ng-container *ngTemplateOutlet=\"brainTable;context:{ctxRows: rowsUsableAce}\"></ng-container>\n        </td>\n        <td></td>\n        <td>\n            <ng-container *ngTemplateOutlet=\"brainTable;context:{ctxRows: rowsNoUsableAce}\"></ng-container>\n        </td>\n    </tr>\n</table>\n\n<ng-template #brainTable let-rows=\"ctxRows\">\n    <table>\n        <tr *ngFor=\"let row of rows\">\n            <td *ngFor=\"let col of row\" [style]=\"col.style\" [title]=\"col.probability\">\n                {{col.content}}\n            </td>\n        </tr>\n    </table>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}